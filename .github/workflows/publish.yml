name: Release

on:
  - workflow_dispatch

jobs:
  deploy:
    # Setup OS and Node Version
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.DEPLOY_FLOW_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

    steps:
      # Checkout code
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.DEPLOY_FLOW_TOKEN }}
      # Install deps
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Setup Git
        run: |
          git config user.name "GitHub Bot"
          git config user.email "Brian-McBride@users.noreply.github.com"
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_FLOW_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Configure npm
        run: |
          echo '//registry.npmjs.org/:_authToken=${NPM_TOKEN}' > .npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Install environment
        run: npm install --legacy-peer-deps

      - name: Test
        run: npm run affected:test

      - name: Version
        shell: bash
        run: npm run affected:version
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_FLOW_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Build
      #   run: npm run affected:build

      # - name: publish
      #   run: npm run affected:publish
      #   env:
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: git-update
      #   shell: bash
      #   run: npm run affected:github
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Return npm
        run: |
          echo 'legacy-peer-deps=true' > .npmrc
          
      - name: Tag last-release
        shell: bash
        run: |
          git tag -f last-release
          git push origin last-release --force


